CREATE DATABASE INSURANCE

USE INSURANCE

CREATE TABLE CUSTOMERS(
CUSTOMER_ID INT(5) PRIMARY KEY AUTO_INCREMENT 101,
NAME VARCHAR(50),
AGE INT(2),
GENDER VARCHAR(5),
CITY VARCHAR(50),
STATE VARCHAR(50));

SELECT * FROM CUSTOMERS

INSERT INTO CUSTOMERS(
NAME,AGE,GENDER,CITY,STATE) VALUES("RAMESH",35,"M","HYDERABAD","TELANGANA"),
								  ("PRIYA",42,"F","BANGALORE","KARNATAKA"),
                                  ("ARJUN",29,"M","CHENNAI","TAMILNADU"),
                                  ("DIVYA",51,"F","MUMBAI","MAHARASHTRA");

SELECT * FROM CUSTOMERS

UPDATE CUSTOMERS SET CUSTOMER_ID=101 WHERE CUSTOMER_ID=1

SELECT * FROM CUSTOMERS
UPDATE CUSTOMERS SET CUSTOMER_ID=102 WHERE CUSTOMER_ID=2
UPDATE CUSTOMERS SET CUSTOMER_ID=103 WHERE CUSTOMER_ID=3
UPDATE CUSTOMERS SET CUSTOMER_ID=104 WHERE CUSTOMER_ID=4

SELECT * FROM CUSTOMERS

CREATE TABLE POLICIES(
POLICY_ID INT PRIMARY KEY,
CUSTOMER_ID INT,
POLICY_TYPE VARCHAR(10),
PREMIUM_AMOUNT DECIMAL(5,2),
START_DATE DATE,
END_DATE DATE);

INSERT INTO POLICIES(
POLICY_ID,CUSTOMER_ID,POLICY_TYPE,PREMIUM_AMOUNT,START_DATE,END_DATE) 
VALUES(201,101,"HEALTH",12000,2022-01-01,2023-01-01),
	  (202,102,"VEHICLE",18000,2022-06-15,2023-06-14),
      (203,103,"LIFE",25000,2022-03-10,2023-03-09),
      (204,104,"HEALTH",20000,2022-09-01,2023-08-31)
      
ALTER TABLE POLICIES MODIFY PREMIUM_AMOUNT DECIMAL(10)    

INSERT INTO POLICIES(
POLICY_ID,CUSTOMER_ID,POLICY_TYPE,PREMIUM_AMOUNT,START_DATE,END_DATE) 
VALUES(201,101,"HEALTH",12000,"2022-01-01","2023-01-01"),
	  (202,102,"VEHICLE",18000,"2022-06-15","2023-06-14"),
      (203,103,"LIFE",25000,"2022-03-10","2023-03-09"),
      (204,104,"HEALTH",20000,"2022-09-01","2023-08-31")

SELECT * FROM POLICIES

CREATE TABLE CLAIMS(
CLAIM_ID INT PRIMARY KEY,
POLICY_ID INT,
CLAIM_DATE DATE,
CLAIM_AMOUNT DECIMAL(5,2),
CLAIM_STATUS VARCHAR(10))

SELECT * FROM CLAIMS

INSERT INTO CLAIMS(
CLAIM_ID,
POLICY_ID,
CLAIM_DATE,
CLAIM_AMOUNT,
CLAIM_STATUS) VALUES(301,201,"2022-05-10",5000,"APPROVED"),(302,202,"2022-08-01",15000,"REJECTED"),(303,203,"2022-12-20",20000,"APPROVED"),(304,204,"2023-02-15",7000,"PENDING")

ALTER TABLE CLAIMS MODIFY CLAIM_AMOUNT DECIMAL(10)
INSERT INTO CLAIMS(
CLAIM_ID,
POLICY_ID,
CLAIM_DATE,
CLAIM_AMOUNT,
CLAIM_STATUS) VALUES(301,201,"2022-05-10",5000,"APPROVED"),(302,202,"2022-08-01",15000,"REJECTED"),(303,203,"2022-12-20",20000,"APPROVED"),(304,204,"2023-02-15",7000,"PENDING")

SELECT * FROM CLAIMS
SELECT * FROM CUSTOMERS
SELECT * FROM POLICIES

SELECT CUSTOMER_ID,POLICY_ID,POLICY_TYPE,PREMIUM_AMOUNT,START_DATE,END_DATE FROM POLICIES WHERE POLICY_TYPE="HEALTH"

---Find customers who are above 40 years and have Vehicle insurance.----

SELECT * FROM CUSTOMERS AS C
JOIN POLICIES AS P
ON C.CUSTOMER_ID=P.CUSTOMER_ID
WHERE C.AGE>40 AND
P.POLICY_TYPE="VEHICLE"

---Display customer name, policy type, and claim status for all claims---

SELECT C.NAME,P.POLICY_TYPE,CL.CLAIM_STATUS FROM CUSTOMERS C
JOIN POLICIES P
ON C.CUSTOMER_ID=P.CUSTOMER_ID 
JOIN CLAIMS CL
ON P.POLICY_ID=CL.POLICY_ID

---Find the total premium collected by policy type.---

SELECT POLICY_TYPE,SUM(PREMIUM_AMOUNT)
FROM POLICIES 
GROUP BY POLICY_TYPE;

---Calculate the average claim amount for approved claims.---

SELECT * FROM CLAIMS
SELECT AVG(CLAIM_AMOUNT),CLAIM_STATUS FROM CLAIMS
WHERE CLAIM_STATUS="APPROVED"

--Identify the customer who has paid the highest premium---

SELECT C.CUSTOMER_ID,C.NAME,SUM(P.PREMIUM_AMOUNT) FROM CUSTOMERS C
JOIN POLICIES P
ON C.CUSTOMER_ID=P.CUSTOMER_ID
GROUP BY C.CUSTOMER_ID,C.NAME
ORDER BY SUM(P.PREMIUM_AMOUNT) DESC LIMIT 5

---Find customers who made a claim but it was rejected---

SELECT C.CUSTOMER_ID,C.NAME 
FROM CUSTOMERS C
JOIN POLICIES P
ON C.CUSTOMER_ID=P.CUSTOMER_ID
JOIN CLAIMS CL
ON P.POLICY_ID=CL.POLICY_ID
WHERE CL.CLAIM_STATUS="REJECTED"

SELECT * FROM POLICIES
WHERE END_DATE BETWEEN CURDATE() AND DATE_ADD(CURDATE(),INTERVAL 30 DAY)

---Calculate claim ratio = (Approved Claims / Total Claims) * 100 for each policy type.---

SELECT * FROM POLICIES
SELECT * FROM CLAIMS
SELECT * FROM CUSTOMERS

SELECT P.POLICY_TYPE,COUNT(CL.CLAIM_ID) AS TOTAL_CLAIMS,
SUM(CASE WHEN CL.CLAIM_STATUS='APPROVED' THEN 1 ELSE 0 END) AS APPROVAL_CLAIMS,
(SUM(CASE WHEN CL.CLAIM_STATUS='APPROVED' THEN 1 ELSE 0 END)*100/COUNT(CL.CLAIM_ID)) AS CLAIM_RATIO
FROM POLICIES P
JOIN CLAIMS CL 
ON CL.POLICY_ID=P.POLICY_ID
GROUP BY P.POLICY_TYPE

---Rank customers by their total premium paid (use window functions if MySQL 8+).---

SELECT C.CUSTOMER_ID,
C.NAME,
SUM(P.PREMIUM_AMOUNT) AS TOTAL_PREMIUM,
RANK() OVER (ORDER BY SUM(P.PREMIUM_AMOUNT) DESC ) AS PREMIUM_RANK
FROM CUSTOMERS C
JOIN POLICIES P
ON C.CUSTOMER_ID=P.CUSTOMER_ID
GROUP BY C.CUSTOMER_ID,C.NAME
ORDER BY TOTAL_PREMIUM DESC





